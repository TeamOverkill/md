<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespacebase" kind="namespace" language="C++">
    <compoundname>base</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="base_8h_1a24d30ed549d566b17921e3d0f43db720" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double base::boxDim</definition>
        <argsstring></argsstring>
        <name>boxDim</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This namespace should hold all &apos;global&apos; variablesBox dimension, currently only cubic boxes</para><para>&lt; Simulation variables </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="16" column="1" bodyfile="main.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1af4570252a73be108356d62dcdb20bbd1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int base::numOfAtoms</definition>
        <argsstring></argsstring>
        <name>numOfAtoms</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of atoms </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="17" column="1" bodyfile="main.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1af9984b4472c8828e87779095989dc541" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int base::iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of iterations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="18" column="1" bodyfile="main.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1ab3d814a83db37111bfc321c56f5c3457" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int base::outFreq</definition>
        <argsstring></argsstring>
        <name>outFreq</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="19" column="1" bodyfile="main.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1ad3febd6a6063b33c5579790028f0bd95" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double base::tStep</definition>
        <argsstring></argsstring>
        <name>tStep</name>
        <initializer>= 0.001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="20" column="1" bodyfile="main.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1ad2a93b71c3f3e81523480eaca58ad752" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double base::temperature</definition>
        <argsstring></argsstring>
        <name>temperature</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="21" column="1" bodyfile="main.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1a380ccb4a38b6c102ce37d370a126a5a5" prot="public" static="no" mutable="no">
        <type>double *</type>
        <definition>double * base::potentialEnergies</definition>
        <argsstring></argsstring>
        <name>potentialEnergies</name>
        <initializer>= (double*) malloc(base::outFreq * sizeof(double))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="22" column="1" bodyfile="base.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1ab7855a12c8d33c04b7a5c97656bd965a" prot="public" static="no" mutable="no">
        <type>double *</type>
        <definition>double * base::kineticEnergies</definition>
        <argsstring></argsstring>
        <name>kineticEnergies</name>
        <initializer>= (double*) malloc(base::outFreq * sizeof(double))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; Initialize arrays </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="23" column="1" bodyfile="base.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1a32d023ce84acba504354f47de3c2f626" prot="public" static="no" mutable="no">
        <type>double *</type>
        <definition>double * base::totalEnergies</definition>
        <argsstring></argsstring>
        <name>totalEnergies</name>
        <initializer>= (double*) malloc(base::outFreq * sizeof(double))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="24" column="1" bodyfile="base.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_8h_1ac23ff48d32045417263b0cd0055dc3b4" prot="public" static="no" mutable="no">
        <type>double *</type>
        <definition>double * base::temperatures</definition>
        <argsstring></argsstring>
        <name>temperatures</name>
        <initializer>= (double*) malloc(base::iterations * sizeof(double))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base.h" line="25" column="1" bodyfile="base.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="base.h" line="11" column="1"/>
  </compounddef>
</doxygen>
