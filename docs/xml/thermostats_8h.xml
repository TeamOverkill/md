<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="thermostats_8h" kind="file" language="C++">
    <compoundname>thermostats.h</compoundname>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <invincdepgraph>
      <node id="183">
        <label>thermostats.h</label>
        <link refid="thermostats_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacethermostats">thermostats</innernamespace>
    <innernamespace refid="namespacethermostats_1_1andersen">thermostats::andersen</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacethermostats" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacethermostats" kindref="compound">thermostats</ref>{</highlight></codeline>
<codeline lineno="2" refid="namespacethermostats_1_1andersen" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">andersen{</highlight></codeline>
<codeline lineno="3" refid="namespacethermostats_1_1andersen_1afa64229a2b2ba2ad40f5ec293ea0da62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacethermostats_1_1andersen_1afa64229a2b2ba2ad40f5ec293ea0da62" kindref="member">set_velocity</ref>(<ref refid="class_atom" kindref="compound">Atom</ref><sp/>**atoms){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ran_u;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>randomMaxwell;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>0.001;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_base_1a1684b05f430b5f765869935843ddaf16" kindref="member">Base::numOfAtoms</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ran_u<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ran_u<sp/>&lt;<sp/>freq){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ran_u1<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ran_u2<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>random_gauss<sp/>=</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(-2<sp/>*<sp/>log(ran_u1))<sp/>*<sp/>sin(2<sp/>*<sp/><ref refid="namespaceconstants_1aaa77429e27a7630917c26d9dcdd02d37" kindref="member">constants::PI</ref><sp/>*<sp/>ran_u2);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoms[i]-&gt;<ref refid="class_atom_1aabc1e87e4ed861ae02f781d3f43d8481" kindref="member">vel</ref>[0]<sp/>=<sp/>random_gauss<sp/>*<sp/>sqrt(<ref refid="namespaceconstants_1a91a17b2ffd6b749ba385ced928ebbdb0" kindref="member">constants::K_DALTON</ref><sp/>*<sp/>300<sp/>/<sp/>atoms[i]-&gt;mass)<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ran_u2<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ran_u1<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_gauss<sp/>=</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(-2<sp/>*<sp/>log(ran_u1))<sp/>*<sp/>sin(2<sp/>*<sp/><ref refid="namespaceconstants_1aaa77429e27a7630917c26d9dcdd02d37" kindref="member">constants::PI</ref><sp/>*<sp/>ran_u2);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoms[i]-&gt;<ref refid="class_atom_1aabc1e87e4ed861ae02f781d3f43d8481" kindref="member">vel</ref>[1]<sp/>=<sp/>random_gauss<sp/>*<sp/>sqrt(<ref refid="namespaceconstants_1a91a17b2ffd6b749ba385ced928ebbdb0" kindref="member">constants::K_DALTON</ref><sp/>*<sp/>300<sp/>/<sp/>atoms[i]-&gt;mass)<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ran_u2<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ran_u1<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_gauss<sp/>=<sp/>sqrt(-2<sp/>*<sp/>log(ran_u1))<sp/>*<sp/>sin(2<sp/>*<sp/><ref refid="namespaceconstants_1aaa77429e27a7630917c26d9dcdd02d37" kindref="member">constants::PI</ref><sp/>*<sp/>ran_u2);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoms[i]-&gt;<ref refid="class_atom_1aabc1e87e4ed861ae02f781d3f43d8481" kindref="member">vel</ref>[2]<sp/>=<sp/>random_gauss<sp/>*<sp/>sqrt(<ref refid="namespaceconstants_1a91a17b2ffd6b749ba385ced928ebbdb0" kindref="member">constants::K_DALTON</ref><sp/>*<sp/>300<sp/>/<sp/>atoms[i]-&gt;mass)<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoms[i]-&gt;<ref refid="class_atom_1aabc1e87e4ed861ae02f781d3f43d8481" kindref="member">vel</ref><sp/>=<sp/>atoms[i]-&gt;<ref refid="class_atom_1aabc1e87e4ed861ae02f781d3f43d8481" kindref="member">vel</ref>.cwiseProduct(<ref refid="class_base_1a249c833ddd4460301d2c1fef9b68e779" kindref="member">Base::dimensionality</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/>}</highlight></codeline>
    </programlisting>
    <location file="thermostats.h"/>
  </compounddef>
</doxygen>
