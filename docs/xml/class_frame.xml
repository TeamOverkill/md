<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_frame" kind="class" language="C++" prot="public">
    <compoundname>Frame</compoundname>
    <includes refid="frame_8h" local="no">frame.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_frame_1a623c130d550f3ac4800c23460fb059bb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector &lt; double &gt; &gt; Frame::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matrix which holds the position and velocities of all atoms (state of the system) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame.h" line="25" column="1" bodyfile="frame.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_frame_1abda85597bd5159229d423cb7f5bab398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Frame::Frame</definition>
        <argsstring>(int numOfAtoms)</argsstring>
        <name>Frame</name>
        <param>
          <type>int</type>
          <declname>numOfAtoms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame.h" line="23" column="1" bodyfile="frame.cpp" bodystart="3" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_frame_1ad764f38028be29ef6a4d7f894d40652d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Frame::save_state</definition>
        <argsstring>(Atoms &amp;atoms)</argsstring>
        <name>save_state</name>
        <param>
          <type><ref refid="class_atoms" kindref="compound">Atoms</ref> &amp;</type>
          <declname>atoms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save current state in a frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame.h" line="24" column="1" bodyfile="frame.cpp" bodystart="15" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An instance of the <ref refid="class_frame" kindref="compound">Frame</ref> class is created at each interval specified by the variable fStep. In each instance the phase space coordinate at the current time step is saved. All frames are then saved to a file which can be displayed as a trajectory in some visualization software. </para>    </detaileddescription>
    <location file="frame.h" line="17" column="1" bodyfile="frame.h" bodystart="17" bodyend="26"/>
    <listofallmembers>
      <member refid="class_frame_1abda85597bd5159229d423cb7f5bab398" prot="public" virt="non-virtual"><scope>Frame</scope><name>Frame</name></member>
      <member refid="class_frame_1ad764f38028be29ef6a4d7f894d40652d" prot="public" virt="non-virtual"><scope>Frame</scope><name>save_state</name></member>
      <member refid="class_frame_1a623c130d550f3ac4800c23460fb059bb" prot="public" virt="non-virtual"><scope>Frame</scope><name>state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
