<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="atoms_8cpp" kind="file" language="C++">
    <compoundname>atoms.cpp</compoundname>
    <includes refid="atoms_8h" local="yes">atoms.h</includes>
    <incdepgraph>
      <node id="41">
        <label>stdlib.h</label>
      </node>
      <node id="36">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>atoms.cpp</label>
        <link refid="atoms_8cpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>fstream</label>
      </node>
      <node id="43">
        <label>Eigen/Dense</label>
      </node>
      <node id="45">
        <label>ran2_lib.cpp</label>
        <link refid="ran2__lib_8cpp"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>vector</label>
      </node>
      <node id="48">
        <label>sstream</label>
      </node>
      <node id="39">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>time.h</label>
      </node>
      <node id="42">
        <label>iostream</label>
      </node>
      <node id="38">
        <label>atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>stdio.h</label>
      </node>
      <node id="44">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atoms_8h" kindref="compound">atoms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_atoms_1a1414a0bfb6351396a7936f6142e4bb52" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a1414a0bfb6351396a7936f6142e4bb52" kindref="member">Atoms::initialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfAtoms){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;numOfAtoms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_atom" kindref="compound">Atom</ref>());</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;mass<sp/>=<sp/>28.0134;<sp/></highlight><highlight class="comment">//[dalton]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;radius<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>%<sp/>2<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;q<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;q<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;pos[0]<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>()<sp/>*<sp/>(<ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref><sp/>-<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;pos[1]<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>()<sp/>*<sp/>(<ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref><sp/>-<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;pos[2]<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>()<sp/>*<sp/>(<ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref><sp/>-<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;pos<sp/>=<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;pos.cwiseProduct(<ref refid="class_base_1a249c833ddd4460301d2c1fef9b68e779" kindref="member">Base::dimensionality</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;set_mb_velocity();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>initial<sp/>forces*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;oldForce[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;oldForce[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;oldForce[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;force[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;force[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;force[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;numOfAtoms++;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Created<sp/>%d<sp/>atoms\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atoms_1ad7ee940c20b641d01afcc81cb37e7175" kindref="member">distances</ref>.resize(<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>,<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atoms_1a5446ee504251468e30620643c7ab1226" kindref="member">forceMatrix</ref>.resize(<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>,<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_atoms_1a8ba97bb006acee207478d77419e7d833" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a8ba97bb006acee207478d77419e7d833" kindref="member">Atoms::set_forces_zero</ref>(){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;force.setZero();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_atoms_1a5be0d727fa9ef4e5d2a616dcaee24289" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a5be0d727fa9ef4e5d2a616dcaee24289" kindref="member">Atoms::update_distances</ref>(){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_atoms_1ad7ee940c20b641d01afcc81cb37e7175" kindref="member">distances</ref>(i,<sp/>k)<sp/>=<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;distance(this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[k]);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_atoms_1a7b4053d07bb17a1f69820d8c28534846" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a7b4053d07bb17a1f69820d8c28534846" kindref="member">Atoms::get_overlaps</ref>(){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlaps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;distance(<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[j])<sp/>&lt;<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;radius<sp/>+<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[j]-&gt;radius){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlaps++;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overlaps;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_atoms_1a03882ecd88ad36c807c1e7d5dc89139b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a03882ecd88ad36c807c1e7d5dc89139b" kindref="member">Atoms::overlap</ref>(<ref refid="class_atom" kindref="compound">Atom</ref>*<sp/>a){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>!=<sp/>a-&gt;<ref refid="class_atom_1a81fcab926e5f35d6ea3c408e1187ac6a" kindref="member">index</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((a-&gt;<ref refid="class_atom_1a9c44a53717ca3857065c0a36787359e1" kindref="member">pos</ref><sp/>-<sp/>this-&gt;atoms[i]-&gt;pos).norm()<sp/>&lt;<sp/>a-&gt;<ref refid="class_atom_1a3f68fa5a0bd341c3c6b73826da8e9302" kindref="member">radius</ref><sp/>+<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i]-&gt;radius)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_atoms_1ac478a601a4133cf7e7b3ea5b2bc99384" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1ac478a601a4133cf7e7b3ea5b2bc99384" kindref="member">Atoms::remove_overlaps</ref>(){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlaps<sp/>=<sp/><ref refid="class_atoms_1a7b4053d07bb17a1f69820d8c28534846" kindref="member">get_overlaps</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldPos;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>random;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>particles<sp/>to<sp/>prevent<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Removing<sp/>overlaps\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(overlaps<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>=<sp/><ref refid="classran2_1a1774f26575de5341fe11d9e7af60c6b3" kindref="member">ran2::get_random</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><sp/>random<sp/>*<sp/>this-&gt;<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldPos<sp/>=<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;random_move(5);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Atom::update_distances(atoms,<sp/>atoms[p]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_atoms_1a03882ecd88ad36c807c1e7d5dc89139b" kindref="member">overlap</ref>(this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p])){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos<sp/>=<sp/>oldPos;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Atom::update_distances(atoms,<sp/>atoms[p]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos[2]<sp/>&lt;<sp/>0<sp/>||<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos[1]<sp/>&lt;<sp/>0<sp/>||<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos[0]<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>equilibrate<sp/>system,<sp/>a<sp/>particle<sp/>was<sp/>found<sp/>outside<sp/>the<sp/>box...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[p]-&gt;pos<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>%<sp/>50000<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlaps<sp/>=<sp/><ref refid="class_atoms_1a7b4053d07bb17a1f69820d8c28534846" kindref="member">get_overlaps</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Remaining<sp/>overlaps:<sp/>%d,<sp/>iteration:<sp/>%d\r&quot;</highlight><highlight class="normal">,<sp/>overlaps,<sp/>i);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\033[32mEquilibration<sp/>done\033[30m\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_atoms_1a9f3a5579401ac72c421eda55994e4142" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a9f3a5579401ac72c421eda55994e4142" kindref="member">Atoms::read_frame</ref>(std::string<sp/>fileName){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>i<sp/>=<sp/>0,<sp/>ind;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xPos,<sp/>yPos,<sp/>zPos,<sp/>xVel,<sp/>yVel,<sp/>zVel;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>molecule,<sp/>atom,<sp/>line;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>infile(fileName);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(infile,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(line);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(iss<sp/>&gt;&gt;<sp/>c))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>second<sp/>line<sp/>in<sp/>the<sp/>input<sp/>file<sp/>should<sp/>be<sp/>the<sp/>total<sp/>number<sp/>of<sp/>atoms!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(line);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(iss<sp/>&gt;&gt;<sp/>molecule<sp/>&gt;&gt;<sp/>atom<sp/>&gt;&gt;<sp/>ind<sp/>&gt;&gt;<sp/>xPos<sp/>&gt;&gt;<sp/>yPos<sp/>&gt;&gt;<sp/>zPos<sp/>&gt;&gt;<sp/>xVel<sp/>&gt;&gt;<sp/>yVel<sp/>&gt;&gt;<sp/>zVel))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Done<sp/>reading<sp/>input<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//exit(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_atom" kindref="compound">Atom</ref>());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/>this-&gt;<ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>read<sp/>all<sp/>atoms<sp/>from<sp/>file....\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="atoms.cpp"/>
  </compounddef>
</doxygen>
