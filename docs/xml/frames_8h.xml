<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="frames_8h" kind="file" language="C++">
    <compoundname>frames.h</compoundname>
    <includes refid="frame_8h" local="yes">frame.h</includes>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="md_engine_8h" local="yes">mdEngine.h</includedby>
    <incdepgraph>
      <node id="164">
        <label>stdlib.h</label>
      </node>
      <node id="171">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>fstream</label>
      </node>
      <node id="166">
        <label>Eigen/Dense</label>
      </node>
      <node id="160">
        <label>frames.h</label>
        <link refid="frames_8h"/>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>ran2_lib.cpp</label>
        <link refid="ran2__lib_8cpp"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>vector</label>
      </node>
      <node id="174">
        <label>sstream</label>
      </node>
      <node id="162">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>time.h</label>
      </node>
      <node id="165">
        <label>iostream</label>
      </node>
      <node id="161">
        <label>frame.h</label>
        <link refid="frame_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>stdio.h</label>
      </node>
      <node id="167">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="177">
        <label>mdEngine.h</label>
        <link refid="md_engine_8h"/>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>frames.h</label>
        <link refid="frames_8h"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_frames" prot="public">Frames</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frame_8h" kindref="compound">frame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_frames" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_frames" kindref="compound">Frames</ref>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8" refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Frame*&gt;<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_frames_1a7f1a57ce12c1017224c30ab4e105457a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_frames_1a7f1a57ce12c1017224c30ab4e105457a" kindref="member">totalFrames</ref>;</highlight></codeline>
<codeline lineno="12" refid="class_frames_1af5b20515a0c19afd2bef9d8182770160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_frames_1af5b20515a0c19afd2bef9d8182770160" kindref="member">frameCounter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13" refid="class_frames_1a84b88b4d8b2f4a1e47fba543565d75bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_frames_1a84b88b4d8b2f4a1e47fba543565d75bf" kindref="member">fStep</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14" refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" kindref="member">saveFreq</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16" refid="class_frames_1a29694b20ea5891c342de26c0543d78eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frames_1a29694b20ea5891c342de26c0543d78eb" kindref="member">Frames</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfAtoms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" kindref="member">saveFreq</ref>){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;totalFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;frameCounter<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//Counter<sp/>which<sp/>holds<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fStep<sp/>=<sp/><ref refid="class_base_1a0505a956296600b0a06335e9bdc008f9" kindref="member">Base::iterations</ref>/numOfFrames;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Save<sp/>frame<sp/>to<sp/>trajectory<sp/>every<sp/>fStep<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;saveFreq<sp/>=<sp/><ref refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" kindref="member">saveFreq</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" kindref="member">saveFreq</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;frames.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_frame" kindref="compound">Frame</ref>(numOfAtoms));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_frames_1a3c34fa704de2fc5804f4b53b7f387c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frame" kindref="compound">Frame</ref>*<sp/><ref refid="class_frames_1a3c34fa704de2fc5804f4b53b7f387c86" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[i];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_frames_1ab84e3d3c918b5f6c95cdcb76ab1aeba1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_frames_1ab84e3d3c918b5f6c95cdcb76ab1aeba1" kindref="member">save_to_file</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfAtoms){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;output.gro&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>this-&gt;<ref refid="class_frames_1af39796f08cdc5d83eee0ecb287d9d3ae" kindref="member">saveFreq</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;Generated<sp/>by<sp/>Slaymulator,<sp/>t=%i\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_frames_1a7f1a57ce12c1017224c30ab4e105457a" kindref="member">totalFrames</ref><sp/>-<sp/><ref refid="class_base_1ad50d7047869566c9a20b0187bdfe73be" kindref="member">Base::outFreq</ref><sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>numOfAtoms);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numOfAtoms;<sp/>i++){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Saving<sp/>state<sp/>%d\n&quot;,<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%5d%-5s%5s%5d%8.3f%8.3f%8.3f%8.4f%8.4f%8.4f\n&quot;</highlight><highlight class="normal">,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;ion&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;asd&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1,<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][0],<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][1],<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][2],<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][3],<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][4],<sp/><ref refid="class_frames_1a3de20c1f14e98b02d29c10cf964bdd24" kindref="member">frames</ref>[j]-&gt;state[i][5]);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%lf<sp/><sp/><sp/><sp/>%lf<sp/><sp/><sp/><sp/><sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref>,<sp/><ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref>,<sp/><ref refid="class_base_1a30b8ae8ec41983f016f20ce757adb1d1" kindref="member">Base::boxDim</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;frameCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="frames.h"/>
  </compounddef>
</doxygen>
