<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="integrators_8h" local="yes">integrators.h</includes>
    <includes refid="thermostats_8h" local="yes">thermostats.h</includes>
    <includes refid="energy_8h" local="yes">energy.h</includes>
    <includes refid="frame_8h" local="yes">frame.h</includes>
    <includes refid="base_8h" local="yes">base.h</includes>
    <includes refid="md_engine_8h" local="yes">mdEngine.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="atom_8h" local="yes">atom.h</includes>
    <includes refid="parser_8h" local="yes">parser.h</includes>
    <incdepgraph>
      <node id="130">
        <label>energy.h</label>
        <link refid="energy_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>stdlib.h</label>
      </node>
      <node id="133">
        <label>mdEngine.h</label>
        <link refid="md_engine_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>integrators.h</label>
        <link refid="integrators_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>fstream</label>
      </node>
      <node id="124">
        <label>Eigen/Dense</label>
      </node>
      <node id="126">
        <label>ran2_lib.cpp</label>
        <link refid="ran2__lib_8cpp"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>vector</label>
      </node>
      <node id="134">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>time.h</label>
      </node>
      <node id="123">
        <label>iostream</label>
      </node>
      <node id="131">
        <label>frame.h</label>
        <link refid="frame_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>thermostats.h</label>
        <link refid="thermostats_8h"/>
      </node>
      <node id="128">
        <label>atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>stdio.h</label>
      </node>
      <node id="125">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="118">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Initialize variables in <ref refid="class_frame" kindref="compound">Frame</ref> <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 &lt; Allocate memory to hold atom array: <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 &lt; Allocate memory to hold array of frames: <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 &lt; Initialize atom variables <linebreak/>
<linebreak/>
<linebreak/>
 &lt; Initialize the force matrix <linebreak/>
<linebreak/>
 &lt; Call <ref refid="group___main__modules_1ga9814b46948bb9bf9930a3a9392aa3a94" kindref="member">run()</ref> with the specified integrator and energy function <linebreak/>
 &lt; Save frames to trajectory file </para>        </inbodydescription>
        <location file="main.cpp" line="11" column="1" bodyfile="main.cpp" bodystart="11" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integrators_8h" kindref="compound">integrators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thermostats_8h" kindref="compound">thermostats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="energy_8h" kindref="compound">energy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frame_8h" kindref="compound">frame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8h" kindref="compound">base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="md_engine_8h" kindref="compound">mdEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom_8h" kindref="compound">atom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parser" kindref="compound">Parser</ref><sp/>parser;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.<ref refid="class_parser_1abe8220a1eec0fc7969b09f8b572ff880" kindref="member">parse</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_1a1568ed24af5e60016e1b69a0263f93e8" kindref="member">Base::initialize</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Actually<sp/>Base::outFreq<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>that<sp/>should<sp/>be<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frame_1a78558e230dba7e5bf57916d38af7536c" kindref="member">Frame::initialize</ref>(<ref refid="class_base_1ad50d7047869566c9a20b0187bdfe73be" kindref="member">Base::outFreq</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atom" kindref="compound">Atom</ref><sp/>**atoms;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>atoms<sp/>=<sp/>(<ref refid="class_atom" kindref="compound">Atom</ref>**)<sp/>malloc(<ref refid="class_base_1a1684b05f430b5f765869935843ddaf16" kindref="member">Base::numOfAtoms</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_atom" kindref="compound">Atom</ref>*));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frame" kindref="compound">Frame</ref><sp/>**frames;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>frames<sp/>=<sp/>(<ref refid="class_frame" kindref="compound">Frame</ref>**)<sp/>malloc(<ref refid="class_base_1ad50d7047869566c9a20b0187bdfe73be" kindref="member">Base::outFreq</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_frame" kindref="compound">Frame</ref>*));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atom_1ac711a82c0e5c4ada4cacec38e64c00d7" kindref="member">Atom::initialize</ref>(atoms);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atom_1a8fadf04e83f1558c13192f91eee5348a" kindref="member">Atom::forceMatrix</ref>.resize(<ref refid="class_base_1a1684b05f430b5f765869935843ddaf16" kindref="member">Base::numOfAtoms</ref>,<sp/><ref refid="class_base_1a1684b05f430b5f765869935843ddaf16" kindref="member">Base::numOfAtoms</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>start<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>simulation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___main__modules_1ga9814b46948bb9bf9930a3a9392aa3a94" kindref="member">mdEngine::run</ref>(&amp;<ref refid="namespaceintegrators_1a217be128a03eaac3dc05bdbd22bc8809" kindref="member">integrators::velocity_verlet_first</ref>,<sp/>&amp;<ref refid="namespaceintegrators_1ac25456f7247f7b73b5db97108cd7583e" kindref="member">integrators::velocity_verlet_second</ref>,<sp/>&amp;<ref refid="group___lennard-_jones_1gaec5ae575bae5880ee0545e2c82f795d2" kindref="member">energy::harmonic::forces</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atoms,<sp/>frames);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Time:<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>time(NULL)<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frame_1aa3523e2ec8247c6c5f2bb102d5016971" kindref="member">Frame::save_to_file</ref>(frames);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Save<sp/>stuff,<sp/>will<sp/>be<sp/>moved<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;energies.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>1000;<sp/>j++){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/><sp/><sp/><sp/>%lf<sp/><sp/><sp/><sp/>%lf<sp/><sp/><sp/><sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/><ref refid="class_base_1a6584c85833adabe5d4a76f65d2dbe6a8" kindref="member">Base::potentialEnergies</ref>[j],<sp/><ref refid="class_base_1a7c2f451a292547e275ac14eb24c2335c" kindref="member">Base::kineticEnergies</ref>[j],<sp/><ref refid="class_base_1ac67647d7acc0ff970b58665b4b8642f7" kindref="member">Base::totalEnergies</ref>[j]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fi<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;temperatures.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fi<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_base_1a0505a956296600b0a06335e9bdc008f9" kindref="member">Base::iterations</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fi,<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/><sp/><sp/><sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/><ref refid="class_base_1ae9423f208c5f9bd90108df4b8ba7530e" kindref="member">Base::temperatures</ref>[j]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fi);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Done\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
