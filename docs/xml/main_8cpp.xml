<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="integrators_8h" local="yes">integrators.h</includes>
    <includes refid="thermostats_8h" local="yes">thermostats.h</includes>
    <includes refid="barostats_8h" local="yes">barostats.h</includes>
    <includes refid="potentials_8h" local="yes">potentials.h</includes>
    <includes refid="frames_8h" local="yes">frames.h</includes>
    <includes refid="base_8h" local="yes">base.h</includes>
    <includes refid="md_engine_8h" local="yes">mdEngine.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="atom_8h" local="yes">atom.h</includes>
    <includes refid="atoms_8h" local="yes">atoms.h</includes>
    <includes refid="parser_8h" local="yes">parser.h</includes>
    <includes refid="potentialmanager_8h" local="yes">potentialmanager.h</includes>
    <incdepgraph>
      <node id="215">
        <label>analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="198">
        <label>stdlib.h</label>
      </node>
      <node id="214">
        <label>mdEngine.h</label>
        <link refid="md_engine_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>potentials.h</label>
        <link refid="potentials_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>integrators.h</label>
        <link refid="integrators_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>fstream</label>
      </node>
      <node id="217">
        <label>potentialmanager.h</label>
        <link refid="potentialmanager_8h"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>Eigen/Dense</label>
      </node>
      <node id="212">
        <label>frames.h</label>
        <link refid="frames_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>ran2_lib.cpp</label>
        <link refid="ran2__lib_8cpp"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>vector</label>
      </node>
      <node id="216">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>sstream</label>
      </node>
      <node id="196">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>time.h</label>
      </node>
      <node id="199">
        <label>iostream</label>
      </node>
      <node id="213">
        <label>frame.h</label>
        <link refid="frame_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>thermostats.h</label>
        <link refid="thermostats_8h"/>
      </node>
      <node id="210">
        <label>barostats.h</label>
        <link refid="barostats_8h"/>
      </node>
      <node id="206">
        <label>atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>stdio.h</label>
      </node>
      <node id="201">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="194">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Initialize atom variables <linebreak/>
<linebreak/>
<linebreak/>
 &lt; Initialize <ref refid="class_frames" kindref="compound">Frames</ref> <linebreak/>
<linebreak/>
 &lt; Create potential manager object <linebreak/>
 &lt; Call <ref refid="group___main__modules_1ga36ce94f85240581e5d673010c94bcee7" kindref="member">run()</ref> with the specified integrator and energy function </para>        </inbodydescription>
        <location file="main.cpp" line="14" column="1" bodyfile="main.cpp" bodystart="14" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integrators_8h" kindref="compound">integrators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thermostats_8h" kindref="compound">thermostats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="barostats_8h" kindref="compound">barostats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="potentials_8h" kindref="compound">potentials.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frames_8h" kindref="compound">frames.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8h" kindref="compound">base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="md_engine_8h" kindref="compound">mdEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom_8h" kindref="compound">atom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atoms_8h" kindref="compound">atoms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="potentialmanager_8h" kindref="compound">potentialmanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parser" kindref="compound">Parser</ref><sp/>parser;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.<ref refid="class_parser_1ad941a297e9f6abb39271090806a6be33" kindref="member">parse</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_1aefcdaef3290778f0ad17484142959bed" kindref="member">Base::initialize</ref>(parser.<ref refid="class_parser_1ad8933f4c0bd3ea9d755da1d03888bf59" kindref="member">numberOfFrames</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atoms" kindref="compound">Atoms</ref><sp/>atoms;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>atoms.<ref refid="class_atoms_1a1414a0bfb6351396a7936f6142e4bb52" kindref="member">initialize</ref>(parser.<ref refid="class_parser_1a919965f1f7f77af800ce12d6ed1a857e" kindref="member">numOfAtoms</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>atoms.<ref refid="class_atoms_1ac478a601a4133cf7e7b3ea5b2bc99384" kindref="member">remove_overlaps</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_frames" kindref="compound">Frames</ref><sp/>frames(parser.<ref refid="class_parser_1ad8933f4c0bd3ea9d755da1d03888bf59" kindref="member">numberOfFrames</ref>,<sp/>parser.<ref refid="class_parser_1a919965f1f7f77af800ce12d6ed1a857e" kindref="member">numOfAtoms</ref>,<sp/>parser.<ref refid="class_parser_1a60debf2e7d96b5d93d1520b484082412" kindref="member">saveFreq</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>start<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_potential_manager" kindref="compound">PotentialManager&lt;potentials::LJ&gt;</ref><sp/>pm;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>simulation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___main__modules_1ga36ce94f85240581e5d673010c94bcee7" kindref="member">mdEngine::run</ref>(&amp;<ref refid="namespaceintegrators_1aaaf8a4997b666efb1260c2ad23711b4c" kindref="member">integrators::velocity_verlet_first</ref>,<sp/>&amp;<ref refid="namespaceintegrators_1a57e7381cbe2890bf7642c4437bd25a8a" kindref="member">integrators::velocity_verlet_second</ref>,<sp/>atoms,<sp/>frames,<sp/>&amp;pm);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Simulation<sp/>took:<sp/>%lu<sp/>seconds.\n&quot;</highlight><highlight class="normal">,<sp/>time(NULL)<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Save<sp/>stuff,<sp/>will<sp/>be<sp/>moved<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;energies.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>1000;<sp/>j++){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/><sp/><sp/><sp/>%lf<sp/><sp/><sp/><sp/>%lf<sp/><sp/><sp/><sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/><ref refid="class_base_1a6584c85833adabe5d4a76f65d2dbe6a8" kindref="member">Base::potentialEnergies</ref>[j],<sp/><ref refid="class_base_1a7c2f451a292547e275ac14eb24c2335c" kindref="member">Base::kineticEnergies</ref>[j],<sp/><ref refid="class_base_1ac67647d7acc0ff970b58665b4b8642f7" kindref="member">Base::totalEnergies</ref>[j]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fi<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;temperatures.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fi<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_base_1a0505a956296600b0a06335e9bdc008f9" kindref="member">Base::iterations</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fi,<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/><sp/><sp/><sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/><ref refid="class_base_1ae9423f208c5f9bd90108df4b8ba7530e" kindref="member">Base::temperatures</ref>[j]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fi);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Done\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
