<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="atoms_8h" kind="file" language="C++">
    <compoundname>atoms.h</compoundname>
    <includes local="no">vector</includes>
    <includes refid="atom_8h" local="yes">atom.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includedby refid="atoms_8cpp" local="yes">atoms.cpp</includedby>
    <includedby refid="frame_8h" local="yes">frame.h</includedby>
    <includedby refid="integrators_8h" local="yes">integrators.h</includedby>
    <includedby refid="md_engine_8h" local="yes">mdEngine.h</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="potentialmanager_8h" local="yes">potentialmanager.h</includedby>
    <incdepgraph>
      <node id="55">
        <label>stdlib.h</label>
      </node>
      <node id="50">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>fstream</label>
      </node>
      <node id="57">
        <label>Eigen/Dense</label>
      </node>
      <node id="59">
        <label>ran2_lib.cpp</label>
        <link refid="ran2__lib_8cpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>vector</label>
      </node>
      <node id="62">
        <label>sstream</label>
      </node>
      <node id="53">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>time.h</label>
      </node>
      <node id="56">
        <label>iostream</label>
      </node>
      <node id="52">
        <label>atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>stdio.h</label>
      </node>
      <node id="58">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="69">
        <label>mdEngine.h</label>
        <link refid="md_engine_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>integrators.h</label>
        <link refid="integrators_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>atoms.cpp</label>
        <link refid="atoms_8cpp"/>
      </node>
      <node id="63">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>potentialmanager.h</label>
        <link refid="potentialmanager_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>frame.cpp</label>
        <link refid="frame_8cpp"/>
      </node>
      <node id="67">
        <label>frames.h</label>
        <link refid="frames_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>frame.h</label>
        <link refid="frame_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_atoms" prot="public">Atoms</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom_8h" kindref="compound">atom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_atoms" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_atoms" kindref="compound">Atoms</ref>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10" refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Atom*&gt;<sp/><ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="class_atoms_1a80a4efa8149d0e72cce977e010c032e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_atom" kindref="compound">Atom</ref>*<sp/><ref refid="class_atoms_1a80a4efa8149d0e72cce977e010c032e0" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a6cf175e162b7c24bf98ffdee40e58edc" kindref="member">atoms</ref>[i];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16" refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_atoms_1ad7ee940c20b641d01afcc81cb37e7175" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/><ref refid="class_atoms_1ad7ee940c20b641d01afcc81cb37e7175" kindref="member">distances</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="class_atoms_1a5446ee504251468e30620643c7ab1226" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/><ref refid="class_atoms_1a5446ee504251468e30620643c7ab1226" kindref="member">forceMatrix</ref>;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a8ba97bb006acee207478d77419e7d833" kindref="member">set_forces_zero</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a5be0d727fa9ef4e5d2a616dcaee24289" kindref="member">update_distances</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a7b4053d07bb17a1f69820d8c28534846" kindref="member">get_overlaps</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a1414a0bfb6351396a7936f6142e4bb52" kindref="member">initialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a539d10ca274094ce38a03ca4799af170" kindref="member">numOfAtoms</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1ac478a601a4133cf7e7b3ea5b2bc99384" kindref="member">remove_overlaps</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a03882ecd88ad36c807c1e7d5dc89139b" kindref="member">overlap</ref>(<ref refid="class_atom" kindref="compound">Atom</ref>*<sp/>a);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_atoms_1a9f3a5579401ac72c421eda55994e4142" kindref="member">read_frame</ref>(std::string<sp/>fileName);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="atoms.h"/>
  </compounddef>
</doxygen>
