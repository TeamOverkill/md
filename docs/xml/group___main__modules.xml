<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="group___main__modules" kind="group">
    <compoundname>Main_modules</compoundname>
    <title>Main_modules</title>
    <innernamespace refid="namespacemd_engine">mdEngine</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___main__modules_1ga5f8cc3610166e26157ab48c1905bd2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mdEngine::get_temperature</definition>
        <argsstring>(Atom **atoms)</argsstring>
        <name>get_temperature</name>
        <param>
          <type><ref refid="class_atom" kindref="compound">Atom</ref> **</type>
          <declname>atoms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Calculate the temperature based on the equipartition theorem where the temperature is <formula id="0">$T = \sum^N_{i=1}a[i].mass * a[i].velocity^2$</formula></para>        </inbodydescription>
        <location file="mdEngine.h" line="15" column="1" bodyfile="mdEngine.h" bodystart="15" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="group___main__modules_1ga43703c5bde3f0a0ffd916e8c030d5d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mdEngine::get_pressure</definition>
        <argsstring>()</argsstring>
        <name>get_pressure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Calculate the pressure based on the virial expansion</para>        </inbodydescription>
        <location file="mdEngine.h" line="28" column="1" bodyfile="mdEngine.h" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="group___main__modules_1ga9814b46948bb9bf9930a3a9392aa3a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void mdEngine::run</definition>
        <argsstring>(I &amp;&amp;integrator_1, I &amp;&amp;integrator_2, F &amp;&amp;force_function, Atom **atoms, Frame **frames)</argsstring>
        <name>run</name>
        <param>
          <type>I &amp;&amp;</type>
          <declname>integrator_1</declname>
        </param>
        <param>
          <type>I &amp;&amp;</type>
          <declname>integrator_2</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>force_function</declname>
        </param>
        <param>
          <type><ref refid="class_atom" kindref="compound">Atom</ref> **</type>
          <declname>atoms</declname>
        </param>
        <param>
          <type><ref refid="class_frame" kindref="compound">Frame</ref> **</type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This function contains the main loop of the program</para>        </inbodydescription>
        <location file="mdEngine.h" line="37" column="1" bodyfile="mdEngine.h" bodystart="37" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
